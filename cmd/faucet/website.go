// Code generated by go-bindata.
// sources:
// faucet.html
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _faucetHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x7a\x6d\x93\xdb\x36\x92\xff\xeb\xf1\xa7\xe8\xf0\x6f\xaf\xa4\xbf\x87\xa4\x66\xc6\xf6\xfa\x24\x52\x29\xaf\x37\xd9\xf3\xd5\x5d\x92\x4a\x9c\xba\xdb\xca\xa6\xae\x40\xb2\x25\xc2\x03\x02\x0c\x00\x4a\xa3\x4c\xe9\xbb\x5f\x35\x40\x52\xd4\xc3\x4c\xec\xb5\xaf\xea\xfc\x62\x4c\x02\x8d\x46\xa3\xfb\xd7\xe8\x07\x2a\xf9\xea\xaf\xdf\xbf\x7d\xff\xf7\x1f\xbe\x81\xd2\x56\x62\xf1\x24\xa1\xff\x40\x30\xb9\x4a\x03\x94\xc1\xe2\xc9\x45\x52\x22\x2b\x16\x4f\x2e\x2e\x92\x0a\x2d\x83\xbc\x64\xda\xa0\x4d\x83\xc6\x2e\xc3\xd7\xc1\x7e\xa2\xb4\xb6\x0e\xf1\xb7\x86\xaf\xd3\xe0\xbf\xc2\x9f\xdf\x84\x6f\x55\x55\x33\xcb\x33\x81\x01\xe4\x4a\x5a\x94\x36\x0d\xde\x7d\x93\x62\xb1\xc2\xc1\x3a\xc9\x2a\x4c\x83\x35\xc7\x4d\xad\xb4\x1d\x90\x6e\x78\x61\xcb\xb4\xc0\x35\xcf\x31\x74\x2f\x97\xc0\x25\xb7\x9c\x89\xd0\xe4\x4c\x60\x7a\x15\x2c\x9e\x10\x1f\xcb\xad\xc0\xc5\xfd\x7d\xf4\x1d\xda\x8d\xd2\xb7\xbb\xdd\x0c\xde\x34\xb6\x44\x69\x79\xce\x2c\x16\xf0\x2d\x6b\x72\xb4\x49\xec\x29\xdd\x22\xc1\xe5\x2d\x94\x1a\x97\x69\x40\xa2\x9b\x59\x1c\xe7\x85\xfc\x60\xa2\x5c\xa8\xa6\x58\x0a\xa6\x31\xca\x55\x15\xb3\x0f\xec\x2e\x16\x3c\x33\xb1\xdd\x70\x6b\x51\x87\x99\x52\xd6\x58\xcd\xea\xf8\x26\xba\x89\xfe\x1c\xe7\xc6\xc4\xfd\x58\x54\x71\x19\xe5\xc6\x04\xa0\x51\xa4\x81\xb1\x5b\x81\xa6\x44\xb4\x01\xc4\x8b\x7f\x6e\xdf\xa5\x92\x36\x64\x1b\x34\xaa\xc2\xf8\x45\xf4\xe7\x68\xea\xb6\x1c\x0e\x3f\xbe\x2b\x6d\x6b\x72\xcd\x6b\x0b\x46\xe7\x1f\xbd\xef\x87\xdf\x1a\xd4\xdb\xf8\x26\xba\x8a\xae\xda\x17\xb7\xcf\x07\x13\x2c\x92\xd8\x33\x5c\x7c\x16\xef\x50\x2a\xbb\x8d\xaf\xa3\x17\xd1\x55\x5c\xb3\xfc\x96\xad\xb0\xe8\x76\xa2\xa9\xa8\x1b\xfc\x62\xfb\x3e\x64\xc3\x0f\xc7\x26\xfc\x12\x9b\x55\xaa\x42\x69\xa3\x0f\x26\xbe\x8e\xae\x5e\x47\xd3\x6e\xe0\x94\xbf\xdb\x80\x8c\x46\x5b\x5d\x44\x6b\xd4\x84\x5c\x11\xe6\x28\x2d\x6a\xb8\xa7\xd1\x8b\x8a\xcb\xb0\x44\xbe\x2a\xed\x0c\xae\xa6\xd3\x67\xf3\x73\xa3\xeb\xd2\x0f\x17\xdc\xd4\x82\x6d\x67\xb0\x14\x78\xe7\x87\x98\xe0\x2b\x19\x72\x8b\x95\x99\x81\xe7\xec\x26\x76\x6e\xcf\x5a\xab\x95\x46\x63\xda\xcd\x6a\x65\xb8\xe5\x4a\xce\x08\x51\xcc\xf2\x35\x9e\xa3\x35\x35\x93\x27\x0b\x58\x66\x94\x68\x2c\x1e\x09\x92\x09\x95\xdf\xfa\x31\xe7\xcd\xc3\x43\xe4\x4a\x28\x3d\x83\x4d\xc9\xdb\x65\xe0\x36\x82\x5a\x63\xcb\x1e\x6a\x56\x14\x5c\xae\x66\xf0\xaa\x6e\xcf\x03\x15\xd3\x2b\x2e\x67\x30\xdd\x2f\x49\xe2\x4e\x8d\x49\xec\x2f\xae\x27\x17\x49\xa6\x8a\xad\xb3\x61\xc1\xd7\x90\x0b\x66\x4c\x1a\x1c\xa9\xd8\x5d\x48\x07\x04\x74\x0f\x31\x2e\xbb\xa9\x83\x39\xad\x36\x01\xb8\x8d\xd2\xc0\x0b\x11\x66\xca\x5a\x55\xcd\xe0\x8a\xc4\x6b\x97\x1c\xf1\x13\xa1\x58\x85\x57\xd7\xdd\xe4\x45\x52\x5e\x75\x4c\x2c\xde\xd9\xd0\xd9\xa7\xb7\x4c\xb0\x48\x78\xb7\x76\xc9\x60\xc9\xc2\x8c\xd9\x32\x00\xa6\x39\x0b\x4b\x5e\x14\x28\xd3\xc0\xea\x06\x09\x47\x7c\x01\xc3\xeb\xef\x81\xdb\xaf\xbc\xea\xe4\x8a\x0b\xbe\x6e\x8f\x35\x78\x3c\x3a\xe1\xc3\x87\x78\x0d\xed\x83\x5a\x2e\x0d\xda\x70\x70\xa6\x01\x31\x97\x75\x63\xc3\x95\x56\x4d\xdd\xcf\x5f\x24\x6e\x14\x78\x91\x06\x8d\x16\x41\x7b\xfd\xbb\x47\xbb\xad\x5b\x55\x04\xfd\xc1\x95\xae\x42\xb2\x84\x56\x22\x80\x5a\xb0\x1c\x4b\x25\x0a\xd4\x69\xf0\x93\xca\x39\x13\x20\xfd\x99\xe1\xe7\x1f\xff\x1d\x5a\x93\x71\xb9\x82\xad\x6a\x34\x7c\x63\x4b\xd4\xd8\x54\xc0\x8a\x82\xe0\x1a\x45\xd1\x40\x10\x87\xdd\x53\x51\xc3\xcc\xca\x3d\xd5\x45\x92\x35\xd6\xaa\x9e\x30\xb3\x12\x32\x2b\xc3\x02\x97\xac\x11\x16\x0a\xad\xea\x42\x6d\x64\x68\xd5\x6a\x45\x91\xce\x1f\xc2\x2f\x0a\xa0\x60\x96\xb5\x53\x69\xd0\xd1\x76\x36\x64\xa6\x56\x75\x53\xb7\x56\xf4\x83\x78\x57\x33\x59\x60\x41\x36\x17\x06\x83\xc5\xdf\xf8\x1a\xa1\x42\x7f\x96\x8b\x63\x48\xe4\x4c\xa3\x0d\x87\x4c\x4f\x80\x91\xc4\x5e\x18\x7f\x24\x68\xff\x25\x8d\xe8\x38\xf5\x47\xa8\x50\x36\x70\xf0\x16\x6a\xba\x57\x82\xc5\xfd\xbd\x66\x72\x85\xf0\x94\x17\x77\x97\xf0\x94\x55\xaa\x91\x16\x66\x29\x44\x6f\xdc\xa3\xd9\xed\x0e\xb8\x03\x24\x82\x2f\x12\xf6\x18\xbc\x41\xc9\x5c\xf0\xfc\x36\x0d\x2c\x47\x9d\xde\xdf\x13\xf3\xdd\x6e\x0e\xf7\xf7\x7c\x09\x4f\xa3\x1f\x31\x67\xb5\xcd\x4b\xb6\xdb\xad\x74\xf7\x1c\xe1\x1d\xe6\x8d\xc5\xf1\xe4\xfe\x1e\x85\xc1\xdd\xce\x34\x59\xc5\xed\xb8\x5b\x4e\xe3\xb2\xd8\xed\x48\xe6\x56\xce\xdd\x0e\x62\x62\x2a\x0b\xbc\x83\xa7\xd1\x0f\xa8\xb9\x2a\x0c\x78\xfa\x24\x66\x8b\x24\x16\x7c\xd1\xae\x3b\x54\x52\xdc\x88\x3d\x5e\x62\x02\x4c\x8f\x73\xe7\x36\x4e\xd4\xa1\xa4\x67\xbc\x60\x15\xf6\xd2\xb7\x78\x30\xdc\xe2\x2d\x6e\xd3\xe0\xfe\x7e\xb8\xb6\x9d\xcd\x99\x10\x19\x23\xbd\xf8\xa3\xf5\x8b\x7e\x47\xc2\xe9\x9a\x1b\x97\x52\x2d\x3a\x09\xf6\x62\x7f\xa4\x5b\x1f\x5d\x5c\x56\xd5\x33\xb8\xb9\x1e\xdc\x5a\xe7\x3c\xfe\xd5\x91\xc7\xdf\x9c\x25\xae\x99\x44\x01\xee\x6f\x68\x2a\x26\xba\xe7\xd6\x5b\x06\xce\x77\xbc\x28\xa4\x3b\xba\x17\xad\xbf\xeb\xa7\x73\x50\x6b\xd4\x4b\xa1\x36\x33\x60\x8d\x55\x73\xa8\xd8\x5d\x1f\xef\x6e\xa6\xd3\xa1\xdc\x94\x0a\xb2\x4c\xa0\xbb\x5d\x34\xfe\xd6\xa0\xb1\xa6\xbf\x4b\xfc\x94\xfb\x4b\x57\x4a\x81\xd2\x60\x71\xa4\x0d\xda\x91\x54\xeb\xa8\x06\xa6\xef\x95\x79\x56\xf6\xa5\x52\x7d\x08\x19\x8a\xd1\xb2\x1e\x44\xbb\x60\x91\x58\xbd\xa7\xbb\x48\x6c\xf1\x49\x21\x40\x53\x8a\xf7\x50\x04\xf0\x37\x1a\x9d\xbd\x46\xd4\x3e\xbf\x20\xc8\x82\x7b\x4d\x62\x5b\x7c\xc6\xce\x04\xc2\x8c\x19\xfc\x98\xed\x5d\xa4\xdf\x6f\xef\x5e\x3f\x77\xff\x12\x99\xb6\x19\x32\xfb\x31\x02\x2c\x1b\x59\x0c\xce\xef\xee\xce\xcf\x15\xa0\x91\x7c\x8d\xda\x70\xbb\xfd\x58\x09\xb0\xd8\x8b\xe0\xdf\x0f\x45\x48\x62\xab\x1f\xc7\xda\xf0\xe5\x0b\x39\xf7\x1f\xa5\x24\x37\x8b\x7f\x55\x1b\x28\x14\x1a\xb0\x25\x37\x40\xc1\xf5\xeb\x24\x2e\x6f\x7a\x92\x7a\xf1\x9e\x26\xbe\x65\x9a\x15\x6c\x0b\xef\xd1\x58\x89\xd6\x2b\x19\x96\x2e\xd5\x00\x6e\x40\x37\xd2\x45\x62\x25\xc1\x96\x78\x98\x9e\xb4\x41\x3b\x82\xf7\x8a\x52\xbc\x35\x4a\x0b\x15\x13\x3c\xe7\xaa\x31\xc0\x72\xab\xb4\x81\xa5\x56\x15\xe0\x5d\xc9\x1a\x63\x89\x11\x5d\x27\x6c\xcd\xb8\x70\xbe\xe5\x4c\x0c\x4a\x03\xcb\xf3\xa6\x6a\x28\x45\x95\x2b\x40\xa9\x9a\x55\xd9\xca\x62\x15\xf8\x40\x25\x94\x5c\xf5\xf2\x98\x9a\x55\xc0\xac\x65\xf9\xad\xb9\x84\xee\x96\x00\xa6\x11\x2c\xc7\x82\x56\xe5\xaa\xaa\x94\x84\x1b\x5d\x40\xcd\xb4\xdd\x82\x39\xcc\x35\x58\x9e\xbb\xa8\x17\xc1\x1b\xb9\x55\x12\xa1\x64\x6b\x27\x21\xbc\xf7\xe5\x05\xc9\xf5\x2d\xcb\x31\x53\xaa\xa7\x86\x8a\x6d\xbb\xed\x5a\xe9\x37\xdc\x96\xdc\xab\xa7\x46\x5d\xd1\xd2\x02\x04\xaf\xb8\x35\x51\x12\xd7\xfb\x1b\x76\x1f\xab\x45\x58\x2a\xcd\x7f\xa7\x44\x47\x0c\xaf\x53\x7b\x74\xd9\x74\x77\xa5\x43\x81\xc0\xa5\x9d\xc1\x0b\x7f\x57\x1e\xe3\xba\xad\x88\xce\x81\xba\xe3\xe9\x2a\x4d\x0a\x40\x33\xb8\xf1\xe9\xad\x4f\x2c\x0a\x3b\x90\xa0\x38\x82\x9e\xdf\xf4\xf5\xeb\xfa\xae\x97\xa3\xcf\x91\xa7\x3d\x13\x42\xc0\xa1\x52\xd6\xbc\x57\xe3\x25\x54\xec\x16\x81\x41\xc2\x8e\x2a\xe6\x56\x68\x57\x6f\x71\xd7\x2f\x88\xed\x06\xd1\x7e\x4d\xae\x9c\xfe\xe8\x19\x72\xb9\x7a\x76\x3d\xf5\x88\xa4\x07\x62\xff\xec\x7a\xca\xa5\x55\xcf\xae\xa7\xd3\xbb\xe9\x47\xfe\x7b\x76\x3d\x55\xf2\xd9\xf5\xd4\x96\xf8\xec\x7a\xfa\xec\xfa\x66\x88\x65\x3f\xf2\x5e\xdd\xb2\x8a\xdd\x12\x11\x1a\xda\xac\x43\x78\x00\x96\xe9\x15\xda\x34\xf8\x6f\x96\xa9\xc6\xce\x32\xc1\xe4\x6d\xb0\x70\xd2\x52\xf2\xe1\x40\x70\x3e\x5d\x85\x9a\x19\x42\x04\x09\xec\x40\xd2\xb6\x46\x0c\x8c\x4d\xa3\xb5\x6a\x24\x05\x49\xa0\x23\x3b\x87\x95\x23\x02\x19\xe9\x65\x12\x25\x99\x8e\x17\x6f\x55\xbd\x0d\x1d\x13\xb7\xfc\x44\x8b\xa6\xa9\x6b\xa5\x6d\x34\xd4\x26\xa3\xb2\x48\xa0\x89\x5f\x4f\x5f\xbe\x7e\xf5\xa8\xf8\x86\x92\x6e\x77\x86\x5e\x42\x96\xa9\x35\x82\x4f\xf1\x33\x75\x07\x4c\x16\xb0\xe4\x1a\x81\x6d\xd8\xf6\xab\x24\x2e\x5c\x41\xf6\xf9\xa0\x5d\xb6\xce\xf5\x7f\x0a\xb5\x9d\xc7\x5f\x42\xdd\x64\x82\x9b\x12\x18\x48\xdc\x40\x62\xac\x56\x72\xb5\x70\xa3\x39\x55\xa8\xee\x15\x6a\x65\xec\x63\xe6\xc7\x2a\xc3\xa2\x38\x03\x80\x2f\x65\xff\xcd\x66\x13\x75\x9a\x74\xc6\x2f\x51\xd4\x31\xdd\x7e\x8d\xe4\x76\x1b\x7b\x2f\x52\x32\xfe\x9a\x17\xe9\xf5\xeb\xeb\x57\xaf\xae\x5f\xfc\xcb\xeb\x97\x2f\xaf\x5f\xbf\x78\xf9\x10\x32\xe8\x50\x9f\x09\x0c\x9f\x55\x7f\xa7\xa8\x88\xed\x53\x6a\x8f\x97\x2e\x95\xa3\x80\x5d\x50\x49\xa2\x83\x7f\x1a\x43\x8d\xa4\xbc\x24\x64\xe2\x6c\x4a\xf1\x09\x28\x72\x30\x7a\x44\xb2\xcf\x84\x56\x07\x1f\x42\x8a\x6a\x2c\x9d\xb0\xab\xed\xb9\x92\x3d\x9c\x2e\xc1\xf0\xaa\x16\x5b\xc8\xf7\x56\x3f\x8f\xab\x07\x8d\xf2\x87\xb0\x3a\x34\x9b\x07\x99\x4b\x06\x2a\x55\x20\x05\x7d\xd3\x98\x1c\x6b\xd7\xf4\xa5\x40\xfa\x97\xed\xef\x4c\x5a\x2e\xb1\x0b\xb8\x11\x7c\x2f\xc5\x16\x1a\x83\xb0\x54\x1a\x0a\xcc\x9a\xd5\xca\x65\x09\x1a\x6a\xcd\xd7\xcc\x62\x17\x65\x4d\x8b\x8a\x1e\x14\x83\x42\x87\x32\x20\x31\x48\x48\xfe\xae\x1a\xc8\x99\x04\xab\x59\x7e\xeb\x3d\xa5\xd1\x9a\x3c\xa5\x46\x7f\x9a\x3e\xce\x67\x28\xd4\xc6\x91\xf8\x73\x2f\x39\x0a\x17\xf4\x0d\x22\x94\x6a\x03\x55\x93\x3b\x87\xa4\xa0\xee\x0e\xb1\x61\xdc\x42\x23\x2d\x17\x5e\x9f\xb6\xd1\x92\x52\x04\x3c\x08\xd2\x27\xa5\x60\x82\xd5\xe2\x7d\x89\x67\x32\xa2\xbe\x88\x03\x8d\x6f\x3d\x39\xd4\x5a\x59\xcc\xc9\xa0\xc0\x56\x8c\x4b\x43\x16\x71\x69\x00\x56\x1f\x51\xe4\xf5\x4f\xed\xc3\xbe\x61\xe9\xa6\xe3\x18\xfe\x26\x54\xc6\x04\xac\x09\xe9\x99\xa0\xec\x4e\x41\xa9\xe8\xe8\x03\x6d\x19\xcb\x6c\x63\x40\x2d\xdd\xa8\x97\x9c\xd6\xaf\x99\x26\x0b\x62\x55\x5b\x48\xdb\x76\x1b\x8d\x19\xd4\xeb\xb6\x89\x48\xaf\x54\xc8\x1f\xcc\xf7\x5a\x4f\xe1\x97\x5f\xe7\x4f\x5a\x51\xfe\x8a\x4b\x07\x09\xc2\xb7\x3f\xb2\x2d\x99\x85\x5c\x23\xb3\x68\x20\x17\xca\x34\xda\x4b\x58\x68\x55\x03\x49\xd9\x71\xea\x38\xd3\x44\xed\x76\xeb\x98\x8c\x4b\x66\xca\x49\xdb\x2d\xd4\xe8\xac\xd4\xcf\x75\xe3\x17\x84\xba\x31\x31\xe0\xe9\x74\x0e\x3c\xe9\xf8\x46\x02\xe5\xca\x96\x73\xe0\xcf\x9f\xf7\xc4\x17\x7c\x09\xe3\x8e\xe2\x17\xfe\x6b\x64\xef\x22\xda\x05\xd2\x14\x86\xbb\xb9\x0d\x5b\x3e\xa6\x16\x3c\xc7\x31\xbf\x84\xab\xc9\xbc\x9b\xcd\x34\xb2\xdb\xee\xad\xb5\xa3\xff\xcf\xfd\xdd\xcd\x0f\x35\xe3\x94\x7f\xa0\x1b\xdf\x0a\x30\xc0\x60\xc5\x8d\x85\x46\x0b\x68\x7d\xd8\x9b\xa0\x37\x88\xa3\x1b\x6a\xe5\x04\x97\xed\x43\x8b\xa9\xee\x08\x9e\x4d\x64\x50\x16\xe3\x7f\xfb\xe9\xfb\xef\x22\x63\x35\x97\x2b\xbe\xdc\x8e\xef\x1b\x2d\x66\xf0\x74\x1c\xfc\xbf\x46\x8b\x60\xf2\xcb\xf4\xd7\x68\xcd\x44\x83\x97\xce\xde\x33\xf7\xf7\x64\x97\x4b\x68\x1f\x67\x70\xb8\xe1\x6e\x32\x99\x9f\x6f\x9b\x0c\xba\x3c\x1a\x0d\xda\x31\x11\xf6\xc0\x3f\xd6\x11\x83\x0a\x6d\xa9\x9c\xeb\x6a\xcc\x95\x94\x98\x5b\x68\x6a\x25\x5b\x95\x80\x50\xc6\xec\x81\xd8\x51\xa4\xa7\xa0\x68\xe9\x53\x17\xac\xff\x13\xb3\x9f\x54\x7e\x8b\x76\x3c\x1e\x6f\xb8\x2c\xd4\x26\x12\xca\x5f\xb5\x11\x39\xa9\xca\x95\x80\x34\x4d\xa1\x8d\xa2\xc1\x04\xbe\x86\x60\x63\x28\x9e\x06\x30\xa3\x47\x7a\x9a\xc0\x73\x38\x5e\x5e\x52\xbc\x7f\x0e\x41\xcc\x6a\x1e\x4c\xbc\x3b\x74\x8a\x57\xb2\x42\x63\xd8\x0a\x87\x02\xba\xc2\xa8\x07\x19\x9d\xa3\x32\x2b\x48\xc1\x19\xa8\x66\xda\xa0\x27\x89\xa8\x38\xef\xd0\x46\x98\x75\x64\x69\x0a\xb2\x11\x62\x0f\x52\xef\x14\xf3\x0e\x7e\x07\xe4\x91\x8f\x35\x5f\xa5\x29\x50\xa5\x4a\x2a\x2e\xf6\x2b\xc9\xf8\xbe\xa6\x9e\x44\x14\x17\xf6\x2b\x26\xf3\x21\x9a\x0f\xb8\x61\xf1\x47\xec\xb0\x38\xe6\x87\xc5\x03\x0c\x5d\x0b\xe3\x31\x7e\xbe\xe5\x31\x60\xe7\x06\x1e\xe0\x26\x9b\x2a\x43\xfd\x18\x3b\xdf\xc2\x68\xd9\x39\x55\xbf\x93\x76\xb0\xf6\x12\xae\x5e\x4d\x1e\xe0\x8e\x5a\xab\x07\x99\x4b\x65\xb7\xe3\x7b\xc1\xb6\x94\x33\xc1\xc8\xaa\xfa\xad\xeb\x38\x8c\x2e\x5d\xc4\x9d\x41\xcf\xe1\xd2\xf5\x92\x67\x30\x72\x6f\x34\xcf\x2b\x74\xab\x5e\x4e\xa7\xd3\x4b\xe8\x3e\xc2\xfc\x85\x91\x13\xea\x06\x77\x0f\xc8\x63\x9a\x3c\xa7\xb8\xff\x39\x12\xb5\x3c\x7a\x99\xda\xf7\xcf\x90\xaa\x8f\x0d\x07\x62\xc1\x9f\xfe\x04\x27\xb3\x87\x30\x8e\x63\xf8\x0f\x46\x55\xb8\x10\xae\x79\xe0\x7a\x06\x3d\x7d\xc5\x8d\x71\xb5\xb8\x81\x42\x49\x6c\xd7\x7c\xda\xb5\x7f\x22\x63\x4b\x06\x0b\x98\x1e\x0b\x48\xd7\xe1\x20\x2c\x9c\x89\x16\x03\xbe\x87\x81\xe0\x62\x37\xdc\xef\x60\x25\xaf\x10\xbe\x4a\x21\x08\x86\x8b\x4f\x28\x88\xa0\x67\x76\x61\xd0\xbe\xf7\xb6\x18\xb7\xd1\xf1\x5c\xec\x9a\x5c\xc2\xcd\x74\x3a\x9d\x9c\x08\xb1\xdb\xab\xf7\x4d\x4d\x69\x13\x30\xb9\x75\x57\x62\xaf\x5b\x97\x38\x52\x0a\x44\x57\x9a\x80\x5c\x09\xe1\x73\x96\x76\x29\x29\xb8\xed\x9d\xa4\x10\x5e\xcd\xcf\x44\xd1\x81\x26\x07\x47\x3b\x36\xcf\x19\xdd\x1f\x9b\xe8\x50\x67\x47\xc4\xe1\xd5\x81\x51\x0e\xec\x75\xde\x30\x17\xbd\xdc\x7c\xaf\xd1\x23\x73\xed\xed\x75\xac\xb3\x81\xfc\x9e\xcf\xf3\xab\x8f\x3c\x46\x3f\x5d\x37\xa6\x1c\x1f\x09\x3a\x99\x9f\xda\xe6\x9d\x45\x4d\x59\xb2\xa2\x90\x45\xb6\xa0\x52\x40\xe3\x89\x49\x5c\xaa\xae\x31\xd4\x28\x0b\xd4\x5d\x4a\xe1\x33\x7b\x4a\x00\x0f\x4c\xe6\xab\xca\x21\x9c\x3e\xd1\x61\x5c\x4a\xa6\x24\x02\x00\x1c\x39\x81\x03\xea\x01\x52\x89\x18\x05\xab\x0d\x16\x90\x82\xff\x26\x3e\x9e\x44\x8d\xe4\x77\xe3\x49\xd8\xbe\x1f\xf3\xe8\xe6\xe7\x7d\x99\xd8\x89\xfd\x3c\x85\x20\xb1\x1a\x78\x91\x8e\x02\x78\x7e\xce\x05\x29\xea\x8e\x16\x7b\x09\x86\x4b\x01\x12\x5b\x2c\x5c\x5b\xd4\xd7\x6b\xff\x08\x32\x96\xdf\xae\x5c\x21\x34\xa3\x54\x6b\x7c\xc2\x96\xad\x99\x65\xda\x71\x9d\xcc\x61\x4f\xde\x16\x8a\x39\x19\x67\x0e\xbe\x22\x75\xdd\x57\xe8\xbf\x58\xb8\xb7\x4c\xe9\x02\x75\xa8\x59\xc1\x1b\x33\x83\x17\xf5\xdd\xfc\x1f\xdd\x17\x1d\xd7\x23\x7e\x54\xd4\x5a\xe3\xe2\x44\xa2\xb6\xc9\xf8\x1c\x82\x24\x26\x82\x3f\x62\xd3\x1f\x76\xf8\x2d\x1e\xce\x74\xc2\xa1\xff\x52\xde\x8e\x57\xbc\x28\x04\x92\xc0\x7b\xf6\xe4\x8c\x64\xff\xa1\x4b\x1d\x6e\x09\x6d\x0b\x7c\xbf\x66\x07\x28\x0c\x3e\xb2\xa0\xef\xa6\x8f\x08\x00\x21\x1d\x99\x3b\x9d\xb7\xc5\xb6\x1b\xd6\x23\xa7\x8b\xf6\x97\x15\x45\xa3\x5d\xae\x35\x0e\x5b\x80\x5d\xc2\xc8\x50\xee\x57\x98\xd1\x24\x2a\x9b\x8a\x49\xfe\x3b\x8e\x29\x2e\x4d\xbc\xae\x5c\x7b\x3e\x38\xbd\x92\x4f\x84\xd9\xf7\xcd\x47\x5d\x8c\x1b\xb5\x4a\x1c\x75\xd6\x7d\xb1\xaf\xed\x67\x30\x9d\x8f\x3e\x51\x43\xe7\x77\x09\x33\xa6\x61\xf8\x12\x76\xc1\x17\xb4\xa2\xdd\xbb\xb9\x8c\xe9\x91\xef\x64\xb8\xfc\x5c\xaa\x4d\x3a\xba\x99\xf6\x42\x7a\x43\x3b\x3b\x8f\x5a\xac\x9d\x18\x83\xa4\xec\x5c\x73\x01\x37\xd3\x2f\x21\xad\xef\x86\x1c\x9d\xc0\x6a\x5e\x63\x01\x2c\xb7\x7c\x8d\xff\x0b\x07\xf9\x02\x4a\xfe\x64\x11\x09\x87\x9d\xf2\x1c\x4c\x0f\xe4\xa5\xd9\x5e\xb7\xff\x9f\xfc\x0d\x62\xa7\xe1\xe7\x10\x9c\x3d\xc8\x83\x48\x3c\x22\x3c\x72\xed\x87\xfd\xde\x7d\x6f\x0a\x8e\x63\x0a\x65\xbb\xfd\xb7\xd2\x49\x54\xda\x4a\x8c\x83\xc4\xba\xdf\xcc\x90\xcc\x3d\x07\xc7\xc0\x0f\x1f\xa6\x74\xbb\xc3\x42\x86\xea\x77\x3c\xaa\xb3\x60\x90\x9c\xf4\xb5\x58\x97\x89\xc0\x6e\xff\xd3\xa2\x38\x86\x9f\x2c\xd3\x16\x18\xfc\xfc\x0e\x9a\xba\x60\xd6\x7f\xc9\xa1\xf8\xe8\xbf\x94\x74\xbf\x3d\xca\x98\x36\xb0\x54\x7a\xc3\x74\xd1\xf6\x67\x6c\x89\x5b\xf7\x25\xa7\x4b\xfd\x0c\xda\x77\x74\x8b\xad\x99\x18\x9f\xd4\x7d\x4f\xc7\xa3\x68\x68\xf2\xd1\x24\x42\x96\x97\xa7\x84\x2e\x62\xf5\xfb\xa6\xf0\x9d\x2b\x01\xc6\x4f\xc7\xb6\xe4\x66\x12\x31\x6b\xf5\x78\x74\x00\x86\xd1\x84\xec\x7a\x35\x28\xc9\xfa\xe5\xc9\x81\x5b\x3d\xc6\x63\x9f\x4c\xf7\x89\x40\x47\x9e\x1b\x33\xf6\xb8\x1a\x5d\x0e\x78\x1f\xc2\x6a\xf4\x6c\xd4\x1b\x6a\xef\xde\xfb\x73\xa4\x67\x25\x39\x60\x3d\x22\x2f\x1b\x9d\x6c\xcf\x8a\xe2\x2d\xf9\xcf\x38\x38\xe3\xe9\xc7\xe8\x98\xf4\xca\xf6\xf7\xf5\xa3\x5a\xf6\xbf\xd2\x78\x40\xc5\xbc\x18\x4d\x22\xd3\x64\xbe\x37\x31\x7e\xd9\x17\x60\x1d\x99\x03\xef\x71\x28\x38\x49\x28\x68\x8b\xc3\xa4\x22\x3c\x4a\x42\x1e\x89\x1a\xed\x96\xfe\x54\xbb\x4b\x52\xf8\x74\xd2\xb7\xb6\xbe\x31\x94\x5c\xf9\xd6\xff\x06\x33\xe3\x3a\x09\xd0\xe2\xdd\x75\x73\x7c\xd7\xe6\xcd\x0f\xef\x06\x9d\x9b\xde\x23\xc6\x8e\x7b\xff\xb3\xc0\x73\x7d\x92\xb3\xbf\x43\xdc\x6c\x36\xd1\x4a\xa9\x95\xf0\xbf\x40\xec\x1b\x29\x31\xab\x79\xf4\xc1\x04\xc0\xcc\x56\xe6\x50\xe0\x12\xf5\x62\xc0\xbe\xed\xae\x24\xb1\xff\x85\x5c\x12\xfb\x1f\x01\xff\x4f\x00\x00\x00\xff\xff\xe1\xe0\x16\x77\x15\x2c\x00\x00")

func faucetHtmlBytes() ([]byte, error) {
	return bindataRead(
		_faucetHtml,
		"faucet.html",
	)
}

func faucetHtml() (*asset, error) {
	bytes, err := faucetHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "faucet.html", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"faucet.html": faucetHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"faucet.html": {faucetHtml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
